package telegram

import (
	"fmt"
	"os"
	"reflect"
	"sort"
	"testing"
	"time"

	"github.com/go-kit/kit/log"
	"github.com/golang/mock/gomock"
	"github.com/looplab/fsm"
	. "github.com/smartystreets/goconvey/convey"
	"github.com/tucnak/telebot"

	"github.com/beevee/konfurbot"
	"github.com/beevee/konfurbot/mock"
)

func TestTelegramIntegration(t *testing.T) {
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	Convey("–ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞ (—ç—Ç–æ—Ç —Ç–µ—Å—Ç –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ —Ç–æ–∫–µ–Ω–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è KONFURBOT_TEST_TOKEN)", t, func() {
		bot := &Bot{
			ScheduleStorage: mock.NewMockScheduleStorage(ctrl),
			TelegramToken:   os.Getenv("KONFURBOT_TEST_TOKEN"),
			Logger:          log.NewNopLogger(),
		}

		err := bot.Start()
		So(err, ShouldBeNil)

		err = bot.Stop()
		So(err, ShouldBeNil)
	})

	Convey("–ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º", t, func() {
		bot := &Bot{
			ScheduleStorage: mock.NewMockScheduleStorage(ctrl),
			TelegramToken:   "123456",
			Logger:          log.NewNopLogger(),
		}

		err := bot.Start()
		So(err, ShouldNotBeNil)
	})
}

func TestUserInteraction(t *testing.T) {
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	Convey("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à–µ–ª –≤ –Ω–∞—à —á–∞—Ç–∏–∫", t, func() {
		mockStorage := mock.NewMockScheduleStorage(ctrl)
		mockTelebot := mock.NewMockTelebotInterface(ctrl)

		tz, _ := time.LoadLocation("Asia/Yekaterinburg")
		chat := telebot.Chat{ID: 1}
		start, _ := time.Parse("15:04", "17:00")
		finish, _ := time.Parse("15:04", "19:00")

		bot := &Bot{
			ScheduleStorage:   mockStorage,
			Timezone:          tz,
			Logger:            log.NewNopLogger(),
			telebot:           mockTelebot,
			chatStateMachines: make(map[int64]*fsm.FSM, 0),
		}

		Convey("—Å–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", func() {
			mockTelebot.EXPECT().SendMessage(chat, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ö–æ–Ω—Ñ–£–†!",
				hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
			bot.handleMessage(telebot.Message{Chat: chat, Text: "/start"})

			Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø—Ä–æ –µ–¥—É (—É –µ–¥—ã –µ—Å—Ç—å –º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è, –Ω–æ –Ω–µ—Ç —Å–ø–∏–∫–µ—Ä–∞)", func() {
				mockStorage.EXPECT().GetEventsByType("food").Return([]konfurbot.Event{
					konfurbot.Event{Type: "food", Short: "„ÅäÂ•Ω„ÅøÁÑº„Åç", Venue: "–ë–∞—Ä", Start: &start, Finish: &finish},
					konfurbot.Event{Type: "food", Short: "ÁÑº„ÅçÈ≥•", Long: "–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Ü–∞–º –Ω–∞–∫—Ä–æ—é—Ç –Ω–∞ –∫—Ä—ã—à–µ –ø–∞—Ä–∫–∏–Ω–≥–∞", Venue: "–ö–∞—Ñ–µ", Start: &start, Finish: &finish},
				})
				mockTelebot.EXPECT().SendMessage(chat, "17:00 ‚Äî 19:00 \\[–ë–∞—Ä]: *„ÅäÂ•Ω„ÅøÁÑº„Åç*\n\n17:00 ‚Äî 19:00 \\[–ö–∞—Ñ–µ]: *ÁÑº„ÅçÈ≥•*\n–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Ü–∞–º –Ω–∞–∫—Ä–æ—é—Ç –Ω–∞ –∫—Ä—ã—à–µ –ø–∞—Ä–∫–∏–Ω–≥–∞\n\n",
					hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
				bot.handleMessage(telebot.Message{Chat: chat, Text: "üå∂ –ï–¥–∞"})
			})

			Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø—Ä–æ –¥–æ–∫–ª–∞–¥—ã", func() {
				mockTelebot.EXPECT().SendMessage(chat, "–û–∫–µ–π, –∫–∞–∫–∏–µ –¥–æ–∫–ª–∞–¥—ã?",
					hasButtons("üîõ –°–µ–π—á–∞—Å", "üîú –°–∫–æ—Ä–æ", "üìú –í—Å–µ"))
				bot.handleMessage(telebot.Message{Chat: chat, Text: "üî• –î–æ–∫–ª–∞–¥—ã"})

				Convey("–∫–æ—Ç–æ—Ä—ã–µ –∏–¥—É—Ç —Å–µ–π—á–∞—Å", func() {
					mockTelebot.EXPECT().SendMessage(chat, "–ò—Ö –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è –¥–æ–≤–æ–ª—å–Ω–æ –º–Ω–æ–≥–æ. –¢–∏–∑–µ—Ä—ã –Ω–∞–¥–æ?",
						hasButtons("‚ò† –° —Ç–∏–∑–µ—Ä–∞–º–∏", "üïä –ë–µ–∑ —Ç–∏–∑–µ—Ä–æ–≤"))
					bot.handleMessage(telebot.Message{Chat: chat, Text: "üîõ –°–µ–π—á–∞—Å"})

					Convey("—Å —Ç–∏–∑–µ—Ä–∞–º–∏, –∏ —á—Ç–æ-—Ç–æ —Å–µ–π—á–∞—Å –∏–¥–µ—Ç", func() {
						mockStorage.EXPECT().GetCurrentEventsByType("talk", gomock.Any()).Return([]konfurbot.Event{
							konfurbot.Event{Type: "talk", Short: "WAT", Long: "WAAAAT", Start: &start, Finish: &finish},
							konfurbot.Event{Type: "talk", Short: "WAT 2", Long: "WAAAAT 22", Start: &start, Finish: &finish},
						})
						mockTelebot.EXPECT().SendMessage(chat, "17:00 ‚Äî 19:00: *WAT*\nWAAAAT\n\n17:00 ‚Äî 19:00: *WAT 2*\nWAAAAT 22\n\n",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "‚ò† –° —Ç–∏–∑–µ—Ä–∞–º–∏"})
					})

					Convey("—Å —Ç–∏–∑–µ—Ä–∞–º–∏, –∏ —Å–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–¥–µ—Ç", func() {
						mockStorage.EXPECT().GetCurrentEventsByType("talk", gomock.Any()).Return([]konfurbot.Event{})
						mockTelebot.EXPECT().SendMessage(chat, "–ù–∏—á–µ–≥–æ –Ω–µ—Ç :(",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "üïä –ë–µ–∑ —Ç–∏–∑–µ—Ä–æ–≤"})
					})

					Convey("–±–µ–∑ —Ç–∏–∑–µ—Ä–æ–≤, –∏ —Å–µ–π—á–∞—Å —á—Ç–æ-—Ç–æ –∏–¥–µ—Ç", func() {
						mockStorage.EXPECT().GetCurrentEventsByType("talk", gomock.Any()).Return([]konfurbot.Event{
							konfurbot.Event{Type: "talk", Short: "WAT", Long: "WAAAAT", Start: &start, Finish: &finish},
							konfurbot.Event{Type: "talk", Short: "WAT 2", Long: "WAAAAT 22", Start: &start, Finish: &finish},
						})
						mockTelebot.EXPECT().SendMessage(chat, "17:00 ‚Äî 19:00: *WAT*\n\n17:00 ‚Äî 19:00: *WAT 2*\n\n",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "üïä –ë–µ–∑ —Ç–∏–∑–µ—Ä–æ–≤"})
					})

					Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –Ω–∞–º –µ—Ä—É–Ω–¥—É", func() {
						mockTelebot.EXPECT().SendMessage(chat, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —Å –Ω–∞—á–∞–ª–∞.",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "gibberish"})
					})
				})

				Convey("–∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–Ω—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–∏–π —á–∞—Å", func() {
					mockTelebot.EXPECT().SendMessage(chat, "–ò—Ö –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è –¥–æ–≤–æ–ª—å–Ω–æ –º–Ω–æ–≥–æ. –¢–∏–∑–µ—Ä—ã –Ω–∞–¥–æ?",
						hasButtons("‚ò† –° —Ç–∏–∑–µ—Ä–∞–º–∏", "üïä –ë–µ–∑ —Ç–∏–∑–µ—Ä–æ–≤"))
					bot.handleMessage(telebot.Message{Chat: chat, Text: "üîú –°–∫–æ—Ä–æ"})

					Convey("—Å —Ç–∏–∑–µ—Ä–∞–º–∏", func() {
						mockStorage.EXPECT().GetNextEventsByType("talk", gomock.Any(), 2*time.Hour).Return([]konfurbot.Event{
							konfurbot.Event{Type: "talk", Short: "WAT", Long: "WAAAAT", Start: &start, Finish: &finish},
							konfurbot.Event{Type: "talk", Short: "WAT 2", Long: "WAAAAT 22", Start: &start, Finish: &finish},
						})
						mockTelebot.EXPECT().SendMessage(chat, "17:00 ‚Äî 19:00: *WAT*\nWAAAAT\n\n17:00 ‚Äî 19:00: *WAT 2*\nWAAAAT 22\n\n",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "‚ò† –° —Ç–∏–∑–µ—Ä–∞–º–∏"})
					})

					Convey("–±–µ–∑ —Ç–∏–∑–µ—Ä–æ–≤", func() {
						mockStorage.EXPECT().GetNextEventsByType("talk", gomock.Any(), 2*time.Hour).Return([]konfurbot.Event{
							konfurbot.Event{Type: "talk", Short: "WAT", Long: "WAAAAT", Start: &start, Finish: &finish},
							konfurbot.Event{Type: "talk", Short: "WAT 2", Long: "WAAAAT 22", Start: &start, Finish: &finish},
						})
						mockTelebot.EXPECT().SendMessage(chat, "17:00 ‚Äî 19:00: *WAT*\n\n17:00 ‚Äî 19:00: *WAT 2*\n\n",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "üïä –ë–µ–∑ —Ç–∏–∑–µ—Ä–æ–≤"})
					})

					Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –Ω–∞–º –µ—Ä—É–Ω–¥—É", func() {
						mockTelebot.EXPECT().SendMessage(chat, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —Å –Ω–∞—á–∞–ª–∞.",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "gibberish"})
					})
				})

				Convey("–≤—Å–µ (—É –Ω–∏—Ö –µ—Å—Ç—å –∏ —Å–ø–∏–∫–µ—Ä, –∏ –º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è)", func() {
					mockStorage.EXPECT().GetEventsByType("talk").Return([]konfurbot.Event{
						konfurbot.Event{
							Type:    "talk",
							Speaker: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∞–∑–∞–∫–æ–≤",
							Venue:   "–£—á–µ–±–Ω—ã–π –∫–ª–∞—Å—Å 1",
							Short:   "WAT",
							Long:    "WAAAAT",
							Start:   &start,
							Finish:  &finish,
						},
						konfurbot.Event{
							Type:    "talk",
							Speaker: "–í–∞—Å–∏–ª–∏–π –ü–µ—Ç—Ä–æ–≤",
							Venue:   "–£—á–µ–±–Ω—ã–π –∫–ª–∞—Å—Å 2",
							Short:   "WAT 2",
							Long:    "WAAAAT 22",
							Start:   &start,
							Finish:  &finish,
						},
					})
					mockTelebot.EXPECT().SendMessage(chat, "17:00 ‚Äî 19:00 \\[–£—á–µ–±–Ω—ã–π –∫–ª–∞—Å—Å 1]: *WAT* (–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∞–∑–∞–∫–æ–≤)\n\n17:00 ‚Äî 19:00 \\[–£—á–µ–±–Ω—ã–π –∫–ª–∞—Å—Å 2]: *WAT 2* (–í–∞—Å–∏–ª–∏–π –ü–µ—Ç—Ä–æ–≤)\n\n",
						hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
					bot.handleMessage(telebot.Message{Chat: chat, Text: "üìú –í—Å–µ"})
				})

				Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –Ω–∞–º –µ—Ä—É–Ω–¥—É", func() {
					mockTelebot.EXPECT().SendMessage(chat, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —Å –Ω–∞—á–∞–ª–∞.",
						hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
					bot.handleMessage(telebot.Message{Chat: chat, Text: "gibberish"})
				})
			})

			Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø—Ä–æ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", func() {
				mockTelebot.EXPECT().SendMessage(chat, "–û–∫–µ–π, –∫–∞–∫–∏–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã?",
					hasButtons("‚ñ∂Ô∏è –°–µ–π—á–∞—Å", "‚è≠ –°–∫–æ—Ä–æ", "üî¢ –í—Å–µ"))
				bot.handleMessage(telebot.Message{Chat: chat, Text: "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã"})

				Convey("–∫–æ—Ç–æ—Ä—ã–µ –∏–¥—É—Ç —Å–µ–π—á–∞—Å", func() {
					mockTelebot.EXPECT().SendMessage(chat, "–ò—Ö –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è –¥–æ–≤–æ–ª—å–Ω–æ –º–Ω–æ–≥–æ. –¢–∏–∑–µ—Ä—ã –Ω–∞–¥–æ?",
						hasButtons("üå™ –° —Ç–∏–∑–µ—Ä–∞–º–∏", "üå¥ –ë–µ–∑ —Ç–∏–∑–µ—Ä–æ–≤"))
					bot.handleMessage(telebot.Message{Chat: chat, Text: "‚ñ∂Ô∏è –°–µ–π—á–∞—Å"})

					Convey("—Å —Ç–∏–∑–µ—Ä–∞–º–∏, –∏ —á—Ç–æ-—Ç–æ —Å–µ–π—á–∞—Å –∏–¥–µ—Ç", func() {
						mockStorage.EXPECT().GetCurrentEventsByType("master", gomock.Any()).Return([]konfurbot.Event{
							konfurbot.Event{Type: "master", Short: "WAT", Long: "WAAAAT", Start: &start, Finish: &finish},
							konfurbot.Event{Type: "master", Short: "WAT 2", Long: "WAAAAT 22", Start: &start, Finish: &finish},
						})
						mockTelebot.EXPECT().SendMessage(chat, "17:00 ‚Äî 19:00: *WAT*\nWAAAAT\n\n17:00 ‚Äî 19:00: *WAT 2*\nWAAAAT 22\n\n",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "üå™ –° —Ç–∏–∑–µ—Ä–∞–º–∏"})
					})

					Convey("—Å —Ç–∏–∑–µ—Ä–∞–º–∏, –∏ —Å–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–¥–µ—Ç", func() {
						mockStorage.EXPECT().GetCurrentEventsByType("master", gomock.Any()).Return([]konfurbot.Event{})
						mockTelebot.EXPECT().SendMessage(chat, "–ù–∏—á–µ–≥–æ –Ω–µ—Ç :(",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "üå¥ –ë–µ–∑ —Ç–∏–∑–µ—Ä–æ–≤"})
					})

					Convey("–±–µ–∑ —Ç–∏–∑–µ—Ä–æ–≤, –∏ —Å–µ–π—á–∞—Å —á—Ç–æ-—Ç–æ –∏–¥–µ—Ç", func() {
						mockStorage.EXPECT().GetCurrentEventsByType("master", gomock.Any()).Return([]konfurbot.Event{
							konfurbot.Event{Type: "master", Short: "WAT", Long: "WAAAAT", Start: &start, Finish: &finish},
							konfurbot.Event{Type: "master", Short: "WAT 2", Long: "WAAAAT 22", Start: &start, Finish: &finish},
						})
						mockTelebot.EXPECT().SendMessage(chat, "17:00 ‚Äî 19:00: *WAT*\n\n17:00 ‚Äî 19:00: *WAT 2*\n\n",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "üå¥ –ë–µ–∑ —Ç–∏–∑–µ—Ä–æ–≤"})
					})

					Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –Ω–∞–º –µ—Ä—É–Ω–¥—É", func() {
						mockTelebot.EXPECT().SendMessage(chat, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —Å –Ω–∞—á–∞–ª–∞.",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "gibberish"})
					})
				})

				Convey("–∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–Ω—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–∏–π —á–∞—Å", func() {
					mockTelebot.EXPECT().SendMessage(chat, "–ò—Ö –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è –¥–æ–≤–æ–ª—å–Ω–æ –º–Ω–æ–≥–æ. –¢–∏–∑–µ—Ä—ã –Ω–∞–¥–æ?",
						hasButtons("üå™ –° —Ç–∏–∑–µ—Ä–∞–º–∏", "üå¥ –ë–µ–∑ —Ç–∏–∑–µ—Ä–æ–≤"))
					bot.handleMessage(telebot.Message{Chat: chat, Text: "‚è≠ –°–∫–æ—Ä–æ"})

					Convey("—Å —Ç–∏–∑–µ—Ä–∞–º–∏", func() {
						mockStorage.EXPECT().GetNextEventsByType("master", gomock.Any(), 2*time.Hour).Return([]konfurbot.Event{
							konfurbot.Event{Type: "master", Short: "WAT", Long: "WAAAAT", Start: &start, Finish: &finish},
							konfurbot.Event{Type: "master", Short: "WAT 2", Long: "WAAAAT 22", Start: &start, Finish: &finish},
						})
						mockTelebot.EXPECT().SendMessage(chat, "17:00 ‚Äî 19:00: *WAT*\nWAAAAT\n\n17:00 ‚Äî 19:00: *WAT 2*\nWAAAAT 22\n\n",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "üå™ –° —Ç–∏–∑–µ—Ä–∞–º–∏"})
					})

					Convey("–±–µ–∑ —Ç–∏–∑–µ—Ä–æ–≤", func() {
						mockStorage.EXPECT().GetNextEventsByType("master", gomock.Any(), 2*time.Hour).Return([]konfurbot.Event{
							konfurbot.Event{Type: "master", Short: "WAT", Long: "WAAAAT", Start: &start, Finish: &finish},
							konfurbot.Event{Type: "master", Short: "WAT 2", Long: "WAAAAT 22", Start: &start, Finish: &finish},
						})
						mockTelebot.EXPECT().SendMessage(chat, "17:00 ‚Äî 19:00: *WAT*\n\n17:00 ‚Äî 19:00: *WAT 2*\n\n",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "üå¥ –ë–µ–∑ —Ç–∏–∑–µ—Ä–æ–≤"})
					})

					Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –Ω–∞–º –µ—Ä—É–Ω–¥—É", func() {
						mockTelebot.EXPECT().SendMessage(chat, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —Å –Ω–∞—á–∞–ª–∞.",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "gibberish"})
					})
				})

				Convey("–≤—Å–µ (—É –Ω–∏—Ö –µ—Å—Ç—å —Å–ø–∏–∫–µ—Ä, –Ω–æ –Ω–µ—Ç –º–µ—Å—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è)", func() {
					mockStorage.EXPECT().GetEventsByType("master").Return([]konfurbot.Event{
						konfurbot.Event{
							Type:    "talk",
							Speaker: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∞–∑–∞–∫–æ–≤",
							Short:   "WAT",
							Long:    "WAAAAT",
							Start:   &start,
							Finish:  &finish,
						},
						konfurbot.Event{
							Type:    "talk",
							Speaker: "–í–∞—Å–∏–ª–∏–π –ü–µ—Ç—Ä–æ–≤",
							Short:   "WAT 2",
							Long:    "WAAAAT 22",
							Start:   &start,
							Finish:  &finish,
						},
					})
					mockTelebot.EXPECT().SendMessage(chat, "17:00 ‚Äî 19:00: *WAT* (–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∞–∑–∞–∫–æ–≤)\n\n17:00 ‚Äî 19:00: *WAT 2* (–í–∞—Å–∏–ª–∏–π –ü–µ—Ç—Ä–æ–≤)\n\n",
						hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
					bot.handleMessage(telebot.Message{Chat: chat, Text: "üî¢ –í—Å–µ"})
				})

				Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –Ω–∞–º –µ—Ä—É–Ω–¥—É", func() {
					mockTelebot.EXPECT().SendMessage(chat, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —Å –Ω–∞—á–∞–ª–∞.",
						hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
					bot.handleMessage(telebot.Message{Chat: chat, Text: "gibberish"})
				})
			})

			Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø—Ä–æ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", func() {
				mockTelebot.EXPECT().SendMessage(chat, "–£—Ç—Ä–æ–º –∏–ª–∏ –≤–µ—á–µ—Ä–æ–º?",
					hasButtons("üçº –£—Ç—Ä–æ–º", "üç∏ –í–µ—á–µ—Ä–æ–º"))
				bot.handleMessage(telebot.Message{Chat: chat, Text: "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è"})

				Convey("—É—Ç—Ä–æ–º", func() {
					mockStorage.EXPECT().GetDayEventsByType("fun").Return([]konfurbot.Event{
						konfurbot.Event{Type: "fun", Short: "WAT", Start: &start, Finish: &finish},
						konfurbot.Event{Type: "fun", Short: "WAT 2"},
					})
					mockTelebot.EXPECT().SendMessage(chat, "17:00 ‚Äî 19:00: *WAT*\n\n–≤–µ—Å—å –¥–µ–Ω—å: *WAT 2*\n\n",
						hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
					bot.handleMessage(telebot.Message{Chat: chat, Text: "üçº –£—Ç—Ä–æ–º"})
				})

				Convey("–≤–µ—á–µ—Ä–æ–º", func() {
					mockStorage.EXPECT().GetNightEventsByType("fun").Return([]konfurbot.Event{
						konfurbot.Event{Type: "talk", Short: "WAT"},
						konfurbot.Event{Type: "talk", Short: "WAT 2", Start: &start, Finish: &finish},
					})
					mockTelebot.EXPECT().SendMessage(chat, "–≤–µ—Å—å –¥–µ–Ω—å: *WAT*\n\n17:00 ‚Äî 19:00: *WAT 2*\n\n",
						hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
					bot.handleMessage(telebot.Message{Chat: chat, Text: "üç∏ –í–µ—á–µ—Ä–æ–º"})
				})

				Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –Ω–∞–º –µ—Ä—É–Ω–¥—É", func() {
					mockTelebot.EXPECT().SendMessage(chat, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —Å –Ω–∞—á–∞–ª–∞.",
						hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
					bot.handleMessage(telebot.Message{Chat: chat, Text: "gibberish"})
				})
			})

			Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø—Ä–æ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä", func() {
				mockTelebot.EXPECT().SendMessage(chat, "–û–∫–µ–π, –Ω–∞ –∫–∞–∫–æ–º –º–∞—Ä—à—Ä—É—Ç–µ –ø–æ–µ–¥–µ–º?",
					hasButtons("üèé –î–µ–∂—É—Ä–Ω—ã–π", "üö≤ –¶–≤–µ—Ç–Ω—ã–µ"))
				bot.handleMessage(telebot.Message{Chat: chat, Text: "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"})

				Convey("–¥–µ–∂—É—Ä–Ω—ã–π", func() {
					mockTelebot.EXPECT().SendMessage(chat, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ–≤–æ–ª—å–Ω–æ –±–æ–ª—å—à–æ–µ, –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –±–ª–∏–∂–∞–π—à–∏–µ —Ä–µ–π—Å—ã –ø–æ–∫–∞–∑–∞—Ç—å?",
						hasButtons("üîú –ë–ª–∏–∂–∞–π—à–∏–µ", "üìú –í—Å–µ —Ä–µ–π—Å—ã"))
					bot.handleMessage(telebot.Message{Chat: chat, Text: "üèé –î–µ–∂—É—Ä–Ω—ã–π"})

					Convey("–±–ª–∏–∂–∞–π—à–∏–µ", func() {
						mockStorage.EXPECT().GetNextEventsByType("transfer_main", gomock.Any(), 2*time.Hour).Return([]konfurbot.Event{
							konfurbot.Event{Type: "transfer", Short: "–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å", Start: &start},
							konfurbot.Event{Type: "transfer", Short: "–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å 2", Start: &start},
						})
						mockTelebot.EXPECT().SendMessage(chat, "17:00: *–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å*\n\n17:00: *–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å 2*\n\n",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "üîú –ë–ª–∏–∂–∞–π—à–∏–µ"})
					})

					Convey("–≤—Å–µ", func() {
						mockStorage.EXPECT().GetEventsByType("transfer_main").Return([]konfurbot.Event{
							konfurbot.Event{Type: "transfer", Short: "–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å", Start: &start},
							konfurbot.Event{Type: "transfer", Short: "–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å 2", Start: &start},
						})
						mockTelebot.EXPECT().SendMessage(chat, "17:00: *–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å*\n\n17:00: *–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å 2*\n\n",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "üìú –í—Å–µ —Ä–µ–π—Å—ã"})
					})

					Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –Ω–∞–º –µ—Ä—É–Ω–¥—É", func() {
						mockTelebot.EXPECT().SendMessage(chat, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —Å –Ω–∞—á–∞–ª–∞.",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "gibberish"})
					})
				})

				Convey("—Ü–≤–µ—Ç–Ω—ã–µ", func() {
					mockTelebot.EXPECT().SendMessage(chat, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ–≤–æ–ª—å–Ω–æ –±–æ–ª—å—à–æ–µ, –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –±–ª–∏–∂–∞–π—à–∏–µ —Ä–µ–π—Å—ã –ø–æ–∫–∞–∑–∞—Ç—å?",
						hasButtons("üîú –ë–ª–∏–∂–∞–π—à–∏–µ", "üìú –í—Å–µ —Ä–µ–π—Å—ã"))
					bot.handleMessage(telebot.Message{Chat: chat, Text: "üö≤ –¶–≤–µ—Ç–Ω—ã–µ"})

					Convey("–±–ª–∏–∂–∞–π—à–∏–µ", func() {
						mockStorage.EXPECT().GetNextEventsByType("transfer_color", gomock.Any(), 2*time.Hour).Return([]konfurbot.Event{
							konfurbot.Event{Type: "transfer", Short: "–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å", Start: &start},
							konfurbot.Event{Type: "transfer", Short: "–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å 2", Start: &start},
						})
						mockTelebot.EXPECT().SendMessage(chat, "17:00: *–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å*\n\n17:00: *–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å 2*\n\n",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "üîú –ë–ª–∏–∂–∞–π—à–∏–µ"})
					})

					Convey("–≤—Å–µ", func() {
						mockStorage.EXPECT().GetEventsByType("transfer_color").Return([]konfurbot.Event{
							konfurbot.Event{Type: "transfer", Short: "–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å", Start: &start},
							konfurbot.Event{Type: "transfer", Short: "–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å 2", Start: &start},
						})
						mockTelebot.EXPECT().SendMessage(chat, "17:00: *–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å*\n\n17:00: *–ö—É–¥–∞-—Ç–æ –≤–¥–∞–ª—å 2*\n\n",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "üìú –í—Å–µ —Ä–µ–π—Å—ã"})
					})

					Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –Ω–∞–º –µ—Ä—É–Ω–¥—É", func() {
						mockTelebot.EXPECT().SendMessage(chat, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —Å –Ω–∞—á–∞–ª–∞.",
							hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
						bot.handleMessage(telebot.Message{Chat: chat, Text: "gibberish"})
					})
				})

				Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –Ω–∞–º –µ—Ä—É–Ω–¥—É", func() {
					mockTelebot.EXPECT().SendMessage(chat, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —Å –Ω–∞—á–∞–ª–∞.",
						hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
					bot.handleMessage(telebot.Message{Chat: chat, Text: "gibberish"})
				})
			})

			Convey("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –Ω–∞–º –µ—Ä—É–Ω–¥—É", func() {
				mockTelebot.EXPECT().SendMessage(chat, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —Å –Ω–∞—á–∞–ª–∞.",
					hasButtons("üå∂ –ï–¥–∞", "üî• –î–æ–∫–ª–∞–¥—ã", "üí• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "üçæ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üöú –¢—Ä–∞–Ω—Å—Ñ–µ—Ä"))
				bot.handleMessage(telebot.Message{Chat: chat, Text: "gibberish"})
			})
		})
	})
}

func hasButtons(buttons ...string) hasButtonsMatcher {
	sort.Strings(buttons)
	return hasButtonsMatcher{buttons}
}

type hasButtonsMatcher struct {
	buttons []string
}

func (h hasButtonsMatcher) Matches(x interface{}) bool {
	sendOptions := x.(*telebot.SendOptions)

	var flatButtons []string
	for _, buttonRow := range sendOptions.ReplyMarkup.CustomKeyboard {
		for _, button := range buttonRow {
			flatButtons = append(flatButtons, button)
		}
	}
	sort.Strings(flatButtons)
	return reflect.DeepEqual(h.buttons, flatButtons)
}

func (h hasButtonsMatcher) String() string {
	return fmt.Sprintf("has buttons %v", h.buttons)
}
