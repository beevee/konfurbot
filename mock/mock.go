// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/beevee/konfurbot (interfaces: Logger,ScheduleStorage)

package mock

import (
	konfurbot "github.com/beevee/konfurbot"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Logger interface
type MockLogger struct {
	ctrl     *gomock.Controller
	recorder *_MockLoggerRecorder
}

// Recorder for MockLogger (not exported)
type _MockLoggerRecorder struct {
	mock *MockLogger
}

func NewMockLogger(ctrl *gomock.Controller) *MockLogger {
	mock := &MockLogger{ctrl: ctrl}
	mock.recorder = &_MockLoggerRecorder{mock}
	return mock
}

func (_m *MockLogger) EXPECT() *_MockLoggerRecorder {
	return _m.recorder
}

func (_m *MockLogger) Log(_param0 ...interface{}) error {
	_s := []interface{}{}
	for _, _x := range _param0 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "Log", _s...)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockLoggerRecorder) Log(arg0 ...interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Log", arg0...)
}

// Mock of ScheduleStorage interface
type MockScheduleStorage struct {
	ctrl     *gomock.Controller
	recorder *_MockScheduleStorageRecorder
}

// Recorder for MockScheduleStorage (not exported)
type _MockScheduleStorageRecorder struct {
	mock *MockScheduleStorage
}

func NewMockScheduleStorage(ctrl *gomock.Controller) *MockScheduleStorage {
	mock := &MockScheduleStorage{ctrl: ctrl}
	mock.recorder = &_MockScheduleStorageRecorder{mock}
	return mock
}

func (_m *MockScheduleStorage) EXPECT() *_MockScheduleStorageRecorder {
	return _m.recorder
}

func (_m *MockScheduleStorage) AddEvent(_param0 konfurbot.Event) {
	_m.ctrl.Call(_m, "AddEvent", _param0)
}

func (_mr *_MockScheduleStorageRecorder) AddEvent(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AddEvent", arg0)
}

func (_m *MockScheduleStorage) GetEventsByType(_param0 string) []konfurbot.Event {
	ret := _m.ctrl.Call(_m, "GetEventsByType", _param0)
	ret0, _ := ret[0].([]konfurbot.Event)
	return ret0
}

func (_mr *_MockScheduleStorageRecorder) GetEventsByType(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetEventsByType", arg0)
}
